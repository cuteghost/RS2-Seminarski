FROM mcr.microsoft.com/dotnet/aspnet:7.0 as base
WORKDIR /app

RUN apt-get update && \
    apt-get install -y curl apt-transport-https gnupg2 && \
    curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list -o /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools unixodbc-dev && \
    echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

FROM mcr.microsoft.com/dotnet/sdk:7.0 as build
COPY API /src/API
COPY Authentication /src/Authentication
COPY Models /src/Models
COPY Database /src/Database

WORKDIR /src
ARG DB_SERVER_ARG
ARG DB_NAME_ARG
ARG DB_USER_ARG
ARG DB_PASSWORD_ARG
ARG JWT_KEY_ARG
ARG JWT_ISSUER_ARG
ARG JWT_AUDIENCE_ARG
RUN dotnet build "API/API.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "API/API.csproj" -c Release -o /app/publish

FROM base as final
WORKDIR /app
COPY --from=publish /app/publish .
ENV DB_SERVER=$DB_SERVER_ARG
ENV DB_NAME=$DB_NAME_ARG
ENV DB_USER=$DB_USER_ARG
ENV DB_PASSWORD=$DB_PASSWORD_ARG
ENV JWT_KEY=$JWT_KEY_ARG
ENV JWT_ISSUER=$JWT_ISSUER_ARG
ENV JWT_AUDIENCE=$JWT_AUDIENCE_ARG

COPY wait-for-db.sh /app
RUN chmod +x /app/wait-for-db.sh

ENTRYPOINT ["/app/wait-for-db.sh"]